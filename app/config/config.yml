imports:
    - { resource: parameters.ini }
    - { resource: security.yml }

framework:
    #esi:             ~
    #translator:      { fallback: %locale% }
    translator:      ~ 
    secret:          %secret%
    charset:         UTF-8
    router:          { resource: "%kernel.root_dir%/config/routing.yml" }
    form:            true
    csrf_protection: true
    validation:      { enable_annotations: true }
    templating:      { engines: ['twig'] } #assets_version: SomeVersionScheme
    session:
        default_locale: %locale%
        auto_start:     true

# Twig Configuration
twig:
    debug:            %kernel.debug%
    strict_variables: %kernel.debug%

# Assetic Configuration
assetic:
    debug:          %kernel.debug%
    use_controller: false
    # java: /usr/bin/java
    filters:
        cssrewrite: ~
        # closure:
        #     jar: %kernel.root_dir%/java/compiler.jar
        # yui_css:
        #     jar: %kernel.root_dir%/java/yuicompressor-2.4.2.jar

# Doctrine Configuration
doctrine:
    dbal:
        driver:   %database_driver%
        host:     %database_host%
        port:     %database_port%
        dbname:   %database_name%
        user:     %database_user%
        password: %database_password%
        charset:  UTF8
        types:
            json: Sonata\Doctrine\Types\JsonType

    orm:
        auto_generate_proxy_classes: %kernel.debug%
        auto_mapping: true
        mappings:
            SonataNotificationBundle: ~

# Swiftmailer Configuration
swiftmailer:
    transport: %mailer_transport%
    host:      %mailer_host%
    username:  %mailer_user%
    password:  %mailer_password%

jms_security_extra:
    secure_controllers:  true
    secure_all_services: false

sonata_cache:
    caches:
        esi:
            servers:
                - varnishadm -T 127.0.0.1:2000 {{ COMMAND }} "{{ EXPRESSION }}"

#        mongo:
#            database:   cache
#            collection: cache
#            servers:
#                - {host: 127.0.0.1, port: 27017, user: username, password: pASS'}
#                - {host: 127.0.0.2}

#        memcached:
#            prefix: test     # prefix to ensure there is no clash between instances
#            servers:
#                - {host: 127.0.0.1, port: 11211, weight: 0}

#        memcache:
#            prefix: test     # prefix to ensure there is no clash between instances
#            servers:
#                - {host: 127.0.0.1, port: 11211, weight: 1}

#        apc:
#            token:  s3cur3   # token used to clear the related cache
#            prefix: test     # prefix to ensure there is no clash between instances
#            servers:
#                - { domain: kooqit.local, ip: 127.0.0.1, port: 80}

sonata_block:
    default_contexts: [cms]
    blocks:
        sonata.admin.block.admin_list:
            contexts:   [admin]

        #sonata.admin_doctrine_orm.block.audit:
        #    contexts:   [admin]

        sonata.block.service.text:
        sonata.block.service.action:
        sonata.block.service.rss:

        # Some specific blocks from the SonataMediaBundle
        #sonata.media.block.media:
        #sonata.media.block.gallery:
        #sonata.media.block.feature_media:

sonata_seo:
    default:          sonata.seo.page.default
    title:            Sonata Project
    metas:
        name:
            keywords:             foo bar
            description:          The description
            robots:               index, follow

        property:
            # Facebook application settings
            #'fb:app_id':          XXXXXX
            #'fb:admins':          admin1, admin2

            # Open Graph information
            # see http://developers.facebook.com/docs/opengraphprotocol/#types or http://ogp.me/
            'og:site_name':       Sonata Project Sandbox
            'og:description':     A demo of the some rich bundles for your Symfony2 projects

        http-equiv:
            'Content-Type':         text/html; charset=utf-8
            #'X-Ua-Compatible':      IE=EmulateIE7

    head:
        'xmlns':              http://www.w3.org/1999/xhtml
        'xmlns:og':           http://opengraphprotocol.org/schema/
        #'xmlns:fb':           "http://www.facebook.com/2008/fbml"

sonata_notification:
    backend: sonata.notification.backend.runtime

sonata_page:
    multisite: host
    ignore_route_patterns:
        - ^(.*)admin(.*)   # ignore admin route, ie route containing 'admin'
        - ^_(.*)          # ignore symfony routes

    ignore_routes:
        - sonata_page_esi_cache
        - sonata_page_js_sync_cache
        - sonata_page_js_async_cache
        - sonata_page_apc_cache

    ignore_uri_patterns:
        - ^/admin(.*)   # ignore admin route, ie route containing 'admin'

    page_defaults:
        homepage: {decorate: false} # disable decoration for homepage, key - is a page route

    default_template: default # template key from templates section, used as default for pages
    templates:
        default: {path: 'SonataPageBundle::layout.html.twig', name: default }

    # manage the http errors
    catch_exceptions:
        not_found: [404]    # render 404 page with "not_found" key (name generated: _page_internal_error_{key})
        fatal:     [500]    # so you can use the same page for different http errors or specify specific page for each error